services:
  postgresTrekker:
    image: postgres:latest
    container_name: db_trekker
    environment:
      POSTGRES_DB: trekker
      POSTGRES_USER: ${POSTGRES_TREKKER_USER}
      POSTGRES_PASSWORD: ${POSTGRES_TREKKER_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - trekker_db_data:/var/lib/postgresql/data
    env_file:
      - .env
  
  postgresKeycloak:
    image: postgres:latest
    container_name: keycloak_db_trekker
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${POSTGRES_KC_USER}
      POSTGRES_PASSWORD: ${POSTGRES_KC_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    env_file:
      - .env
  
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak_trekker
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgresKeycloak:5432/keycloak
      KC_DB_USERNAME: ${POSTGRES_KC_USER}
      KC_DB_PASSWORD: ${POSTGRES_KC_PASSWORD}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command: start-dev
    depends_on:
      - postgresKeycloak
    ports:
      - "8080:8080"
    env_file:
      - .env
  
  redis:
    image: redis:latest
    container_name: redis_trekker
    restart: always
    command: redis-server --requirepass ${REDIS_HOST_PASSWORD}
    volumes:
      - redis_data:/var/lib/redis/data
    ports:
      - "6379:6379"
    env_file:
      - .env

volumes:
  trekker_db_data:
  keycloak_db_data:
  redis_data: